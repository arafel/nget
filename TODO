* fix the everpresent "Operation now in progress" and make it report the real error

* fullxoverthreshold.  Or sending multiple requests before recieving response (possible protocol breakage?)

* exit with non-zero exit status if paths cannot be changed to (and other errors?)

*add option for servers that tell you size of file with 1 eol char (but send message with 2)

reports of huge memory usage (150MB) after running 12 hours (~370 -r's and -p's) (only when "dragging on"?)
look into using a memory debugger
(probably was the midinfo leakage, fixed in 0.14)

-p/-P when dir doesn't exist should just ignore all commands until a correct dir is encountered (and set a seperate error code to be exited with)

*create .ngetrc on first run from NNTPSERVER or -h if specified instead.  (and add new servers not seen before when used with -h?  need to keep comments somehow though...)

*derr on uulib messages - file already exists derr.. is the current hack good enough?


*redo byte lenience?
*store d/l path in -w files (for -W)
*make -W switch to read in -w files and decode it all. (also if downloading any, update the file )

definataly gonna do:
*make MID_INFO_MIN_KEEP, etc config options
*update STL includes/etc to use new non-.h files, and std namespace
*fix EINTR (should try read again, not err (also should keep the same timeout within multiple tries?))
*add log output ability
*fix tempfiledir mixup where -w to write doesn't use the tempfile dir and such misses parts we already have
*make ngetlite skip downloading parts we already have (but which are still listed as not gotten in the listfile)
*test libc5/old gcc (forget it.  ngetlite is their only hope. upgrade.)


might do eventually:

 * cross post detection/mark downloaded in all groups somehow??
   Hm, actually it might not be that hard.. since mids are globally unique, it
   could just use the same midinfo for _all_ groups?  sound good/bad?
 * ditch/fix uulib?   Are there any alternatives?
 * make -@ relative to start dir rather than -p dir? (when not using .nget3/lists/ dir)
 * allow -p/-P to create dirs (ala mkdir -P).  Perhaps enabled by config option
   or other switch?
 * per group (.ngetrc) config setting for "base directory", then -p/-P could be
   relative of that.  (maybe if you put / or ./ in front, it would be
   relative to root/current instead of base)
 * allow searching based upon date/author/lines etc.  ideally, something like:
   nget -r (date > 03/04/1999 && (author = bob && subject = file\.) || (subject
   = blah)).. DONE, but uses postfix method.. might be nice to add infix type.
 * check for existance of files, don't d/l what we have already (overridable?)
	use substring match to select filename? (ie: -r "heres the
	files:.*(snarf\.r..) ").
	or try some sort of parsing?  prolly really hard to get right for all
	(even most) cases possibly could do a glob, then search through the
	headers with the file names.. come at the problem from reverse - done
	the reverse way.. seems pretty successful, though it doesn't stop from
	d/l'ing multiples of the same file.. could be adapted to such though,
	by adding files to a similar list after they are d/l'd and we know
	their names.
 * threaded (background) decoding

only considering:

 * should the midinfo files only store the mid for the first part, like now, 
   or the mid of all parts of the post?


Misc info:
rfc977	"Network News Transfer Protocol"
rfc1036	"Standard for Interchange of USENET Messages"
various other rfcs/drafts: http://www.tin.org/docs.html
